含有云台，
陀螺仪模式以及小陀螺

修改了速度计算方式
加入了速度缓慢模式12.3

加入就近转向算法
整理了文件
车子会莫名其妙抖动12.11

加入超级电容12.13

更改为测试工程，第二版底盘12.17

更改了电容采样频率，修改了遥控对速度的映射，增加睡眠模式01.06

更改为舵轮麦轮一体化，目前依然是底盘测试模式，开启后自动为机械模式1.11

增加了电机温度1.13

修改为第一版舵轮步兵，修改激光为PD15 1.18

更改电容采样频率1.18

增加串口3作为视觉备用通信，打开了硬触发PD13 更新了视觉参数与算法 增加全局最大速度和小陀螺最大速度设置 1.19

更改led灯闪烁指示意义 2.13

增加云台pid调参数模式 修改状态系统bug 更新自瞄调试模式,重写麦轮代码 增加保持中值2.20

舵轮九十度变向与四十五度变相缓慢变化处理，但并不是很完美；
运动到停止过程做过渡处理；
增加不同小陀螺模式，未测试；
修改视觉模式在几种情况下的应急处理；
修改堵转处理代码，测试无效，需要继续修改；
整理底盘代码；重调GM电机pid；增加复位ZXV；
注释掉部分imu的飞机代码；
增加旧版电容发送数据代码CAN；3.22

尝试通过发送的电流值预测电压，没有用，发送电流不代表实际电流3.23

新增can发送 HXZP_Tx_uint8() ，便于memcyp 3.28

优化堵转系统 3.29

增加UI界面 注释部分judge_inf....的代码以及vision_po....雷达代码 3.30

视觉数据解析改为memcpy 
视觉发送数据配置修改 循环发送改为NORMAL，避免数据覆盖 4.1

4.2
修改麦轮底盘控制代码，修改gimbfirst启动逻辑
增加新电容代码，修改部分自瞄代码

4.3
电容代码优化

4.4
电容充电速度40-45s
Chassis_Motor_Stop中将CHASSIS值清空避免开启遥控后保留速度保留
更改配置CAN ENABLE BUS-OFF 静电干扰下可以使用
修改部分键盘代码，未测试

4.5
增加下主控代码position处修改上下主控
memcyp对结构体取指针错误，要使用typedef __packed struct 才能取指针一一对应位置
复习一下结构体的指针
增加开机复位功能，但不知道为什么偶尔开机pitch乱抖

4.6
在小电脑开启并发送数据时，开启单片机导致初始化失败：陀螺仪初始化失败，串口2初始化失败，导致遥控器数据接收不到
解决：陀螺仪初始化最高优先级，串口1初始化最低优先级

4.8
开机启动机械归中 射击统计
修改底盘跟随初始化，避免重复给予目标值导致为速度环
修改陀螺仪角度分解
重调pid，适当增加外环Kp提高速度
修改下主控id号，001 002 ……会导致Pit电机（206）被阻碍接收信息 因此改为301

4.9
pitch内环要使用陀螺仪加速度，否则侧着会抖
yaw内环使用差分，但要进行转换，不要使用陀螺仪速度，否则pit运动会引起yaw变化（也可能因为yaw转换方式不对）

4.10
yaw角度直接用y =  atan2(2*(q1*q2 + q0*q3),q0*q0 +q1*q1-q2*q2 -q3*q3)*57.3f ;就好
不需要角度转换，但要用yaw_rate的话就要用转换：
//	y = arm_cos_f32(p / 180 * PI) * y - arm_sin_f32(p / 180 * PI) * r;	
//  y = arm_cos_f32(p / 180 * PI) * y + arm_sin_f32(p / 180 * PI) * p + \
//	    arm_cos_f32(r / 180 * PI) * y + arm_sin_f32(r / 180 * PI) * r;
把角度换速度，公式不能直接用;
pitch内环要使用陀螺仪加速度，否则侧着会抖;
另外Kp，计算速度时Kp小一些，角度时大一些，另外差分计算速度用上了角度也和kp有关
角度时要大一些，是因为太小了pit在动时，yaw会稍微偏移，因此kp大一些

4.11
修改麦轮，云台跟随和小陀螺都进行速度分解，使达到真正的云台跟随

4.15
删除AUTO下的积分项，视觉里自瞄和打符的比例不一致更改适配，
云台跟随下y与p均为IMU，机械均为MEC

4.17
陀螺仪模式下，旋转运动会一卡一卡

4.18
舵轮，在CHASSIS.CHO为0下使TURN_PID的blind_ERR为30，不为零时为0避免yaw轴抖动导致反复转向
同理下时POWER_SLOW和POWER_FAST切换
机械模式下，使用普通转向，
键盘模式下，通道值下降为每次减2，
POWER_SLOW改为200最大
问题：导向轮有点会一卡一卡的声音

4.23
处于打符情况底盘不动

4.27
3s后Kp置为0.1

4.28
增加自动发射（自瞄连发）
堵转判断修改

5.2
460800 修改波特率，1ms发送一次
视觉发送py数据为绝对值，

5.4
定时器开启
HAL_TIM_Base_Start_IT(&htim3);
然后在那个那个什么it里中断处理
还有那些什么比较输出
中断时间=自己写的那两个值相乘/频率
串口发送和放在中断处理

5.5
-3比-1快一半

5.6

5.8
视觉收到的数据有不平滑：将发送放在中断

5.9
修改：即使无目标速度依然可以改变目标值
等待防抖处理

重大问题：祖传功率算法会导致疯车疯车，具体原因未知


5.15
疯车不是因为功率算法
麦轮一卡一卡
速度越快功率越高


5.16
麦轮功率算法要改进
修改电容发送，mec使用下主控发送电容数据
UI修改
修改裁判系统失联状态，提高到2000，下主控发数据避免超时


5.21
超热量 超功率 超射速 超速减速 拨盘pid 堵转条件 连发

5.22
34 28.61 29.17 27.55
36 28.34 28.76 27.58
38 28.61 29.07 28.00

40 28.67 29.39 27.21
   28.77 29.14 28.08
   28.85 29.31 27.41
   29.13 29.78 28.06
   
   28.88 29.78
   
42 28.83 29.31 27.61
   29.07 29.68 27.91
   
   28.95 29.68
   
43 29.09 29.68 28.38
   29.09 29.80 27.97
   29.05 29.66 27.49
   
   29.07 29.80
   
44 29.12 29.67 27.83
   29.29 29.85 27.94

   29.20 29.85

45 28.99 29.67 27.33   
   29.13 29.58 27.67
   29.09 29.67 27.67
   29.24 29.84 28.05

   29.11 29.84

46 28.99 29.68 27.84
   
   
47 29.12 29.61 28.55
   29.07 29.61 27.36
   29.99 31.57 27.61
   29.30 30.05 28.38

   29.37 31.57

48 29.29 30.01 28.17
   29.29 30.07 27.90
   29.21 30.14 27.82
   
   29.26 30.14
   
49 29.11 29.70 23.78
   29.16 29.63 28.27
   29.29 29.87 28.04
   29.35 30.01 28.16
   29.21 30.01 27.71
   29.30 30.19 27.63

   29.23 30.19
   
50 29.30 29.91 28.16   
   29.38 30.11 28.08
   29.39 30.01 28.13
   29.31 30.05 28.14
   
   29.35 30.11
温度补偿：
45度：
补偿5
43 29.41



补偿4
39 29.42 29.98 27.74
   29.41 29.96 27.71
   29.43 29.94 29.60
   
补偿3 
34 28.66 29.20 27.37
35 28.84 29.46 27.73
36 28.93 29.49 27.36
37 28.64 29.14 27.38
38 28.86 29.59 27.38
   28.96 29.56 27.27
   29.15 29.89 28.03
39 29.32 29.79 27.49   
   29.13 29.79 27.53
40 29.01 29.73 27.52
41 28.93 29.61 27.05 
   29.05 29.56 27.22
43 29.13 29.68 27.78   
45 29.17 29.85 27.65   
46 29.24 29.77 27.56   
47 29.17 30.01 27.27   
   
43度标准
补偿5
42 29.35 30.05 27.8   
   
42度标准
补偿5
42 29.23 30.03 27.59   
45 29.20 29.73 27.61    
47 29.16 29.77 27.91   
   
40度标准
补偿5
41 29.28 29.87 27.26
43 29.17 29.91 27.83
45 29.13 29.65 27.67 
46 29.05 29.60 28.07 
   29.10 29.84 27.20
   29.15 29.76 27.30
   29.30 30.03 27.86
47 29.12 29.84 27.73   
   29.14 29.77 28.10
48 29.11 29.67 27.63   
   29.17 29.71 28.53
49 29.15 29.63 28.02   
   29.17 29.88 27.72
50 29.34 29.83 28.18   
   29.21 29.96 27.81
   
61 28.64   
167 28.50   

5.26   
连发比单发快，因为有KI   
   
非连续数据使用一阶滤波要注意
imu_info->yaw   = 0.5f*imu_info->yaw_last + 0.5f*imu_info->yaw;
imu_info->yaw_v   = 0.7f*(Half_Turn(imu_info->yaw - imu_info->yaw_last,8191))/T   + 0.3f*imu_info->yaw_v_last;   


mec
35 27.65 28.16 26.87 1.29
imax5000
39 29.11 29.25 27.73 1.52

45 28.24 28.38 27.15 1.22

50 28.78 29.78 27.22 2.38

子弹射速6.17
和电机温度有关
和子弹新旧程度有关
和连射和单发的积分ki有关

7.2
调整舵轮轮组方向，微调右边两个轮子，使得其机械模式下可以走直线
泽帆的防打滑算法看起来很玄学，不是很理解

7.3
开关断火线别段地线
自动打符使用定时器计时，
遥控器控制逻辑稍微修改
优化部分底盘代码，小陀螺自动提速最高转速
鼠标滚轮有数据，为mouse_z 但不使用
鼠标xy通道值别用任务计算，使用中断，更加流畅
加入反打符antdf 

7.4
旧麦轮下主控can1发送坏了
改为can2接收和发生
电控控制代码加入can口选择参数
删除之前的各种电容测试代码
整理底盘代码
整理发射机构代码
大致加入双枪管代码

7.8
适应性小陀螺有bug艹！

7.14
加入双枪切换代码，测试：初始化最大1.3秒，切换0.1秒

















